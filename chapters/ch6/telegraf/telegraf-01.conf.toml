[agent]
 hostname = "telegraf-01"


[[inputs.snmp]]
 agents = ["ceos-01"]
 version = 2
 community = "${SNMP_COMMUNITY}"
 interval = "60s"
 timeout = "10s"
 retries = 3

  # Tag to identify the stage of the data pipeline
  [[inputs.snmp.tags]]
    data_type = 'raw'
  
  [[inputs.snmp.table]]
    name = "interface"

    [[inputs.snmp.table.field]]
      # IF-MIB::ifDescr
      name = 'name'
      oid = "1.3.6.1.2.1.2.2.1.2"
      is_tag = true

    [[inputs.snmp.table.field]]
      # IF-MIB::ifHCInOctets
      name = 'in_octets'
      oid = "1.3.6.1.2.1.31.1.1.1.6"

    [[inputs.snmp.table.field]]
      # IF-MIB::ifHCOutOctets
      name = 'out_octets'
      oid = "1.3.6.1.2.1.31.1.1.1.10"

[[processors.rename]]
  # Rename the tag 'agent_host' to 'device'
  [[processors.rename.replace]]
    tag = 'agent_host'
    dest = 'device'

[[processors.regex]]
  # Filter metrcis that have 'interface' name
  namepass = ['interface']

  # Regex processor operation on the metric tags
  [[processors.regex.tags]]
    # Name of the tag to match
    key = 'name'
    # Regex pattern to match
    pattern = '^Ethernet.*$'
    # Name of the new tag
    result_key = 'intf_role'
    # Replacement string
    replacement = 'peer'

  [[processors.regex.tags]]
    # Name of the tag to match
    key = 'name'
    # Regex pattern to match
    pattern = '^Management.*$'
    # Name of the new tag
    result_key = 'intf_role'
    # Replacement string
    replacement = 'mgmt'

[[outputs.file]]
  files = ["stdout"]

# Send metrics to Kafka
[[outputs.kafka]]
  brokers = ['kafka-01:29092']
  topic = 'telegraf-data-collection'
  routing_tag = 'host'
